---
- hosts: kubernetes
  tasks:
  - name: Finish any partial configs
    ansible.builtin.shell: "dpkg --configure -a"
    become: true
  - name: Update all packages to their latest version
    apt:
      name: "*"
      state: latest
      update_cache: yes
    become: yes
  - name: Load nf_conntrack_proto_gre
    copy:
      dest: "/etc/modules-load.d/nf_conntrack_proto_gre.conf"
      content: |
        nf_conntrack_proto_gre
    become: yes
  - name: Install some base libraries we need
    apt:
      pkg:
        - curl
        - apt-transport-https
        - ca-certificates
        - gnupg
        - lsb-release
        - open-iscsi
        - jq
    become: yes
  - name: Add an Apt signing key for 2ndquadrant
    ansible.builtin.apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present
    become: yes
  - name: Add docker repo
    ansible.builtin.apt_repository:
      repo: "deb https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    become: yes
  - name: Install containerd.io
    apt:
      pkg:
        - containerd.io
    become: yes
  - name: Install k3sup
    ansible.builtin.shell: "curl -sLS https://get.k3sup.dev | sh"
    args:
      creates: /usr/local/bin/k3sup
    become: true
  - name: Limit multipath
    ansible.builtin.copy:
      content: '
blacklist {
    devnode "^sd[a-z0-9]+"
}
defaults {
    user_friendly_names yes
}
'
      dest: /etc/multipath.conf
    become: true
  - name: Restart mutlipath
    ansible.builtin.shell: "systemctl restart multipathd.service || echo \"no multipath yay\""
    become: true
- hosts: kube-leader
  tasks:
  - name: Install docker
    apt:
      pkg:
        - containerd.io
        - docker-ce
        - docker-ce-cli
    become: yes
  - name: Install k3s leader
    ansible.builtin.shell: "k3sup install --k3s-version v1.23.3+k3s1 --host $(hostname).pigscanfly.ca --context k3s --k3s-extra-args '--disable servicelb --disable traefik'"
    args:
      creates: /usr/local/bin/k3s-uninstall.sh
    become: true
#- hosts: leader-backup
#  tasks:
#  - name: Install k3s failover
#    ansible.builtin.shell: "k3sup join --server --host $(hostname).pigscanfly.ca --server-ip {{ hostvars['k8s-leader']['ansible_eth0']['ipv4']['address']  }} --server --k3s-extra-args '--node-label node.kubernetes.io/storage=storage  --disable servicelb --disable traefik'"
#    args:
#      creates: /etc/systemd/system/k3s.service
#    become: true
- hosts: pis
  tasks:
  - name: Install k3s workers with containerd & storage role
    ansible.builtin.shell: "k3sup join --k3s-version v1.23.3+k3s1 --server-host nano-4gb.pigscanfly.ca --host $(hostname).pigscanfly.ca --k3s-extra-args '--node-label node.kubernetes.io/storage=storage'"
    args:
      creates: /usr/local/bin/k3s-agent-uninstall.sh
    become: true
- hosts: docker-hosts
  tasks:
  - name: Install docker
    apt:
      pkg:
        - docker-ce
        - docker-ce-cli
        - containerd.io
    become: yes
- hosts: gpus
  tasks:
  - name: Install nvidia stuff
    apt:
      pkg:
        - nvidia-container
        - nvidia-cuda
        - libnvidia-common-470
        - nvidia-docker2
    become: yes
  - name: Install k3s workers with docker
    ansible.builtin.shell: "k3sup join --k3s-version v1.23.3+k3s1 --server-host nano-4gb.pigscanfly.ca --host $(hostname).pigscanfly.ca --k3s-extra-args '--docker --node-label node.kubernetes.io/gpu=gpu'"
    args:
      creates: /usr/local/bin/k3s-agent-uninstall.sh
    become: true
  - name: Setup  docker to use the nvidia runtime
    ansible.builtin.copy:
      content: '
{
    "runtimes": {
        "nvidia": {
            "path": "nvidia-container-runtime",
            "runtimeArgs": []
        }
    },
    "default-runtime": "nvidia"
}
'
      dest: /etc/docker/daemon.json
    become: true
- hosts: amd-gpus
  tasks:
  - name: Install on AMD GPU hosts
    ansible.builtin.shell: "git clone https://github.com/abuccts/rocm-container-runtime; cd rocm-container-runtime; bash install.sh; k3sup join --k3s-version v1.23.3+k3s1 --server-host nano-4gb.pigscanfly.ca --host $(hostname).pigscanfly.ca --k3s-extra-args '--node-label svccontroller.k3s.cattle.io/enablelb=true --node-label node.kubernetes.io/gpu=amd'"
    args:
      creates: /usr/local/bin/k3s-agent-uninstall.sh
    become: true
  - name: Setup  docker to use the rocm-container-runtime
    ansible.builtin.copy:
      content: '
{
    "runtimes": {
        "rocm": {
            "path": "/usr/bin/rocm-container-runtime",
            "runtimeArgs": []
        }
    },
    "default-runtime": "rocm"
}
'
      dest: /etc/docker/daemon.json
    become: true
- hosts: x86
  tasks:
  - name: Install k3s workers with docker
    ansible.builtin.shell: "k3sup join --k3s-version v1.23.3+k3s1 --server-host nano-4gb.pigscanfly.ca --host $(hostname).pigscanfly.ca --k3s-extra-args '--node-label svccontroller.k3s.cattle.io/enablelb=true'"
    args:
      creates: /usr/local/bin/k3s-agent-uninstall.sh
    become: true
