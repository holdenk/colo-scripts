---
- hosts: kubernetes
  tasks:
  - name: Finish any partial configs
    ansible.builtin.shell: "dpkg --configure -a"
    become: true
  - name: Load nf_conntrack_proto_gre
    copy:
      dest: "/etc/modules-load.d/nf_conntrack_proto_gre.conf"
      content: |
        nf_conntrack_proto_gre
    become: yes
  - name: Install some base libraries we need
    apt:
      pkg:
        - curl
        - apt-transport-https
        - ca-certificates
        - gnupg
        - lsb-release
        - open-iscsi
        - jq
    become: yes
  - name: Remove the thing to disable lxc rp_filter
    ansible.builtin.file:
      state: absent
      path: /etc/sysctl.d/90-override.conf
    become: true
  - name: Restart sysctl
    ansible.builtin.shell: "systemctl restart systemd-sysctl"
    become: true
  - name: Add an Apt signing key for 2ndquadrant
    ansible.builtin.apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present
    become: yes
  - name: Add docker repo
    ansible.builtin.apt_repository:
      repo: "deb https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
      update_cache: true
    become: yes
  - name: Install containerd.io
    apt:
      pkg:
        - containerd.io
      update_cache: true
    become: yes
  - name: Install k3sup
    ansible.builtin.shell: "curl -sLS https://get.k3sup.dev | sh"
    args:
      creates: /usr/local/bin/k3sup
    become: true
  - name: Limit multipath
    ansible.builtin.copy:
      content: '
blacklist {
    devnode "^sd[a-z0-9]+"
}
defaults {
    user_friendly_names yes
}
'
      dest: /etc/multipath.conf
    become: true
  - name: Restart mutlipath
    ansible.builtin.shell: "systemctl restart multipathd.service || echo \"no multipath yay\""
    become: true
- hosts: kube-leader
  tasks:
  - name: Install docker
    apt:
      pkg:
        - containerd.io
        - docker-ce
        - docker-ce-cli
    become: yes
  - name: Install k3s leader
    ansible.builtin.shell: "k3sup install --k3s-version v1.27.1+k3s1 --host $(hostname).pigscanfly.ca --context k3s --k3s-extra-args '--disable servicelb --disable traefik --disable-network-policy --flannel-ipv6-masq'"
#    ansible.builtin.shell: "k3sup install --k3s-version v1.27.1+k3s1 --host $(hostname).pigscanfly.ca --context k3s --k3s-extra-args '--disable servicelb --disable traefik --cluster-cidr 10.42.0.0/16,fd00:a0::/64 --service-cidr 10.43.0.0/16,fd00:a1::/108 --node-ip 23.177.16.21,2602:fcb1::1337:21 --flannel-ipv6-masq'"
    args:
      creates: /usr/local/bin/k3s-uninstall.sh
    become: true
  - name: Check that k3s node has come up
    ansible.builtin.shell: "kubectl get nodes || (sleep 360 && kubectl get nodes) || (sleep 360 && kubectl get nodes)"
    become: true
#  - name: Make custom config.toml.tmpl file since config.toml is overwritten automatically.
#    copy:
#      remote_src: yes
#      src: /var/lib/rancher/k3s/agent/etc/containerd/config.toml
#      dest: /var/lib/rancher/k3s/agent/etc/containerd/config.toml.tmpl
#      force: yes
#    become: true
#  - name: Disable unprivliged ports - https://github.com/k3s-io/k3s/issues/5912
#    replace:
#      regexp: '^(.*)enable_unprivileged_ports = true(.*)$' 
#      replace: '\1enable_unprivileged_ports = false'
#      path: /var/lib/rancher/k3s/agent/etc/containerd/config.toml.tmpl
#      unsafe_writes: true
#    become: true
#  - name: Disable unprivliged ports - https://github.com/k3s-io/k3s/issues/5912
#    replace:
#      regexp: '^(.*)enable_unprivileged_icmp = true(.*)$' 
#      replace: '\1enable_unprivileged_icmp = false'
#      path: /var/lib/rancher/k3s/agent/etc/containerd/config.toml.tmpl
#      unsafe_writes: true
#    become: true
  - name: Restart k3s
    ansible.builtin.shell: "service k3s restart"
    become: true
#- hosts: leader-backup
#  tasks:
#  - name: Install k3s failover
#    ansible.builtin.shell: "k3sup join --server --host $(hostname).pigscanfly.ca --server-ip {{ hostvars['k8s-leader']['ansible_eth0']['ipv4']['address']  }} --server --k3s-extra-args '--node-label node.kubernetes.io/storage=storage  --disable servicelb --disable traefik'"
#    args:
#      creates: /etc/systemd/system/k3s.service
#    become: true
- hosts: pis
  tasks:
  - name: Install extra modules for pi
    apt:
      pkg:
        - linux-modules-extra-raspi
  - name: Install k3s workers on PIs with containerd & storage role
    ansible.builtin.shell: "k3sup join --k3s-version v1.27.1+k3s1 --server-host jumba.pigscanfly.ca --host $(hostname).pigscanfly.ca --k3s-extra-args '--node-label node.kubernetes.io/storage=storage'"
    args:
      creates: /usr/local/bin/k3s-agent-uninstall.sh
    become: true
- hosts: docker-hosts
  tasks:
  - name: Install docker and friends
    apt:
      pkg:
        - docker-ce
        - docker-ce-cli
        - containerd.io
    become: yes
- hosts: arm-gpus
  tasks:
  - name: Install nvidia stuff
    apt:
      pkg:
        - nvidia-container
        - nvidia-cuda
        - libnvidia-common-470
        - nvidia-docker2
    become: yes
- hosts: x86-gpus
  tasks:
  - name: Install nvidia stuff
    apt:
      pkg:
        - nvidia-container-toolkit
    become: yes
  - name: Install k3s workers with gpus
    ansible.builtin.shell: "k3sup join --k3s-version v1.27.1+k3s1 --server-host jumba.pigscanfly.ca --host $(hostname).pigscanfly.ca --k3s-extra-args '--node-label node.kubernetes.io/gpu=gpu' "
    args:
      creates: /usr/local/bin/k3s-agent-uninstall.sh
    become: true
  - name: Make custom config.toml.tmpl file since config.toml is overwritten automatically.
    copy:
      remote_src: yes
      src: /var/lib/rancher/k3s/agent/etc/containerd/config.toml
      dest: /var/lib/rancher/k3s/agent/etc/containerd/config.toml.tmpl
      force: yes
    become: true
  - name: Add plugins to conatinerd if not present
    ansible.builtin.lineinfile:
      line: '[plugins."io.containerd.grpc.v1.cri".containerd]'
      unsafe_writes: true
      path: /var/lib/rancher/k3s/agent/etc/containerd/config.toml.tmpl
    become: true
  - name: Setup conatinerd to use the nvidia runtime
    ansible.builtin.lineinfile:
      insertafter: '[plugins."io.containerd.grpc.v1.cri".containerd.containerd]'
      line: 'default_runtime_name = "nvidia"'
      unsafe_writes: true
      path: /var/lib/rancher/k3s/agent/etc/containerd/config.toml.tmpl
    become: true
#  - name: Disable unprivliged ports - https://github.com/k3s-io/k3s/issues/5912
#    replace:
#      regexp: '^(.*)enable_unprivileged_ports = true(.*)$' 
#      replace: '\1enable_unprivileged_ports = false'
#      path: /var/lib/rancher/k3s/agent/etc/containerd/config.toml.tmpl
#      unsafe_writes: true
#    become: true
#  - name: Disable unprivliged ports - https://github.com/k3s-io/k3s/issues/5912
#    replace:
#      regexp: '^(.*)enable_unprivileged_icmp = true(.*)$' 
#      replace: '\1enable_unprivileged_icmp = false'
#      path: /var/lib/rancher/k3s/agent/etc/containerd/config.toml.tmpl
#      unsafe_writes: true
#    become: true
  - name: Restart k3s workers to pickup new config
    ansible.builtin.shell: "systemctl restart k3s-agent"
    become: true
- hosts: amd-gpus
  tasks:
  - name: Install on AMD GPU hosts
    ansible.builtin.shell: "git clone https://github.com/abuccts/rocm-container-runtime; cd rocm-container-runtime; bash install.sh; k3sup join --k3s-version v1.27.1+k3s1 --server-host jumba.pigscanfly.ca --host $(hostname).pigscanfly.ca --k3s-extra-args '--node-label svccontroller.k3s.cattle.io/enablelb=true --node-label node.kubernetes.io/gpu=amd'"
    args:
      creates: /usr/local/bin/k3s-agent-uninstall.sh
    become: true
  - name: Make custom config.toml.tmpl file since config.toml is overwritten automatically.
    copy:
      remote_src: yes
      src: /var/lib/rancher/k3s/agent/etc/containerd/config.toml
      dest: /var/lib/rancher/k3s/agent/etc/containerd/config.toml.tmpl
      force: yes
    become: true
  - name: Add plugins to conatinerd if not present
    ansible.builtin.lineinfile:
      line: '[plugins."io.containerd.grpc.v1.cri".containerd]'
      unsafe_writes: true
      path: /var/lib/rancher/k3s/agent/etc/containerd/config.toml.tmpl
    become: true
  - name: Setup conatinerd to use the rocm runtime
    ansible.builtin.lineinfile:
      insertafter: '[plugins."io.containerd.grpc.v1.cri".containerd]'
      line: 'default_runtime_name = "rocm"'
      unsafe_writes: true
      path: /var/lib/rancher/k3s/agent/etc/containerd/config.toml.tmpl
    become: true
  - name: Add the rocm runtime
    ansible.builtin.blockinfile:
      content: |
               [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.rocm]
               runtime_type = "io.containerd.runc.v2"
               [plugins."io.containerd.grpc.v1.cri".containerd.runtimes."rocm".options]
               BinaryName = "/usr/bin/rocm-container-runtime"
      path: /var/lib/rancher/k3s/agent/etc/containerd/config.toml.tmpl
    become: true
  - name: Restart k3s workers to pickup new config
    ansible.builtin.shell: "systemctl restart k3s-agent"
    become: true
- hosts: x86
  tasks:
  - name: Install k3s workers on vanilla x86 nodes
    ansible.builtin.shell: "k3sup join --k3s-version v1.27.1+k3s1 --server-host jumba.pigscanfly.ca --host $(hostname).pigscanfly.ca --k3s-extra-args '--node-label svccontroller.k3s.cattle.io/enablelb=true'"
    args:
      creates: /usr/local/bin/k3s-agent-uninstall.sh
    become: true
- hosts: kubernetes
  
